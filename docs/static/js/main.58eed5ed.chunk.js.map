{"version":3,"sources":["categories/AddCategories.js","helpers/GetGifs.js","categories/GifGridItem.js","categories/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAQlB,SACI,uBAEIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OADAc,QAAQC,IAAI,CAACL,QAAMV,QAEf,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCDHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAdAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAC,GAGfH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,IAGIC,EDdoBK,CAAa5B,GAAhCa,EAL6B,EAKlCN,KAAae,EALqB,EAKrBA,QAQhB,OAEI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAIQL,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE1BxBkB,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,YAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAe9B,OACI,qCACK,2CACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBAGA,6BAEI6C,EAAWrB,KAAI,SAAAT,GAAQ,OAElB,cAAC,EAAD,CACAA,SAAUA,GADIA,Y,MCzBpC+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.58eed5ed.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types';\r\n\r\n\r\nexport const AddCategories = ({setcategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputCahnge = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setcategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n      \r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputCahnge}\r\n\r\n            />\r\n        </form>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nAddCategories.propTypes = {\r\n    setcategories:Proptypes.func.isRequired \r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pZK33HuMGSIr3aOwIuGcycRTxscRn98w`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    console.log({title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from 'react'\r\n// import { GifExpertApp } from '../GifExpertApp';\r\n//import { getGifs } from '../helpers/GetGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setimages] = useState([])\r\n\r\n\r\nconst {data:images, loading} = useFetchGifs(category);\r\n   \r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"animate__animated animate__zoomIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">loading</p>}\r\n            <div className=\"card-grid\">\r\n\r\n\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/GetGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            \r\n          \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n           \r\n\r\n        })\r\n    }, [])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategories } from './categories/AddCategories';\r\nimport { GifGrid } from './categories/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n\r\n    const [categories, setcategories] = useState(['One pus']);\r\n\r\n    //  const handleAd = () =>{\r\n\r\n    //     setcategories([\"Naruto\",...categories]);\r\n       \r\n\r\n    //  }\r\n     \r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n             <h2>GifExpert</h2>\r\n             <AddCategories setcategories={setcategories}/>\r\n             <hr/>\r\n           \r\n\r\n             <ol>\r\n             {\r\n                 categories.map(category => \r\n                      \r\n                      <GifGrid key={category}\r\n                      category={category}/>\r\n                 )\r\n             }\r\n             </ol>\r\n\r\n             \r\n\r\n             \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}